{"version":3,"sources":["webpack:///webpack/bootstrap 1f177109ddfffa636314","webpack:///./lib/client/util.js","webpack:///./lib/client/player.js","webpack:///./lib/client/game.js","webpack:///./lib/client/game_view.js","webpack:///./lib/client/nectar.js","webpack:///./lib/client/viewport.js","webpack:///./lib/client/world.js"],"names":["dist","randomPos","getRandomInt","randomColor","slopeToDegrees","vectorToRadians","radiansToVector","radiansToDegrees","degreesToRadians","calculateNewVector","pos1","pos2","Math","sqrt","pow","width","height","x","random","y","min","max","floor","colors","length","atan2","radians","sin","cos","PI","degrees","startRadians","targetRadians","newX","newY","Util","Player","id","size","game","color","velX","velY","speedMultiplier","NORMAL_SPEED","boosting","count","radius","zombies","i","push","inputs","context","xPos","yPos","stroke","save","beginPath","fillStyle","strokeStyle","lineWidth","shadowColor","shadowBlur","arc","fill","closePath","restore","lastZombie","nectarCoords","pop","xView","yView","zombie","zxPos","zyPos","drawSegment","velocityScale","worldWidth","worldHeight","nextX","nextY","zX","zY","shrink","BOOSTED_SPEED","speed","Game","canvas","socket","world","viewport","nectar","players","nectarCount","currentPlayerId","addPlayer","bind","handleInput","generate","follow","start","addNectar","object","player","add","setCurrentPlayerId","concat","Object","values","r","c","delta","normal_frame_time","PHYSICS_FRAME_RATE","forEach","update","clearRect","gameObjects","draw","lastTime","Date","now","requestId","window","setInterval","physicsLoop","time","emit","pos","num","timestamp","seq","changeXVel","changeYVel","down","document","addEventListener","e","key","preventDefault","status","boost","unboost","canvasCoords","getBoundingClientRect","oX","left","oY","top","mX","clientX","mY","clientY","dX","dY","updatePlayerVelocity","WORLD_WIDTH","WORLD_HEIGHT","GameView","moveNum","listen","on","onPlayerDisconnected","onReceivePlayers","data","console","log","setup","vel","existingPlayer","updatePlayer","keys","includes","shadow","currentPlayer","getElementById","innerWidth","innerHeight","getContext","io","game_view","Nectar","Viewport","canvasWidth","canvasHeight","xDeadZone","yDeadZone","wView","hView","followed","gameObject","World","ctx","createElement","rows","columns","fillRect","rect","image","Image","src","toDataURL","drawImage"],"mappings":"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","file":"./lib/client/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f177109ddfffa636314","export function dist(pos1, pos2) {\n  return Math.sqrt(\n    Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n  );\n}\n\nexport function randomPos(width, height) {\n  const x = Math.random() * width;\n  const y = Math.random() * height;\n  return [x, y];\n}\n\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function randomColor() {\n  const colors = ['#9850FF', '#FE5F5C', '#FF5EAE', '#69FE60', '#5EFFE5', '#FEFB5B', '#695DFE', '#EDA14B'];\n  return colors[Math.floor(Math.random() * colors.length)]\n}\n\nexport function slopeToDegrees(x, y) {\n  return Math.atan2(y, x)\n};\n\nexport function vectorToRadians(x, y) {\n  return Math.atan2(y, x);\n}\n\nexport function radiansToVector(radians) {\n  const y = Math.sin(radians);\n  const x = Math.cos(radians);\n  return [x, y];\n};\n\nexport function radiansToDegrees(radians) {\n  return radians / (Math.PI / 180);\n}\n\nexport function degreesToRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nexport function calculateNewVector(startRadians, targetRadians) {\n  if (startRadians < 0 && targetRadians < 0) {\n    if (startRadians < targetRadians) {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 32));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 32));\n    }\n  } else if (startRadians > 0 && targetRadians > 0) {\n    if (startRadians < targetRadians) {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 32));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 32));\n    }\n  } else if (startRadians < 0 && targetRadians > 0) {\n    if (targetRadians - degreesToRadians(180) > startRadians) {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 32));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 32));\n    }\n  } else {\n    if (targetRadians + degreesToRadians(180) > startRadians) {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 32));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 32));\n    }\n  }\n  return [newX, newY];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/util.js","import * as Util from './util';\n\nclass Player {\n  constructor(id, x, y, size, game, color) {\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n\n    this.color = color || Util.randomColor();\n    this.game = game\n\n    this.velX = 0.7;\n    this.velY = 0.7;\n\n    this.speedMultiplier = Player.NORMAL_SPEED;\n\n    // this.width = 50;\n    // this.height = 50;\n\n    this.boosting = false;\n    this.count = 0;\n\n    this.radius = 15;\n    this.zombies = [];\n    for (let i = 0; i < this.size; i++) {\n      this.zombies.push([this.x, this.y])\n    }\n\n    this.inputs = [];\n  }\n\n  drawSegment(context, xPos, yPos, stroke) {\n    context.save();\n    context.beginPath();\n    context.fillStyle = this.color;\n    context.strokeStyle = \"#ccc\";\n    context.lineWidth = 1;\n    if (this.boosting) {\n      context.shadowColor = this.color;\n      context.shadowBlur = 20;\n    }\n    context.arc(xPos + this.radius, yPos + this.radius , this.radius, 0, Math.PI * 2, false);\n    context.fill();\n    context.stroke();\n    context.closePath();\n    context.restore();\n\n  }\n\n  grow() {\n    const lastZombie = this.zombies[this.size-1]\n    this.zombies.push(lastZombie);\n    this.size += 1;\n    this.radius += 0.02;\n  }\n\n  shrink() {\n    if (this.size > 20) {\n      if (this.count === 20) {\n        const nectarCoords = this.zombies.pop();\n        this.zombies.pop();\n        // this.game.addNectar(nectarCoords[0], nectarCoords[1], 5, this.color);\n        this.size -= 2;\n        this.radius -= 0.02;\n        this.count = 0;\n      }\n      this.count += 1;\n    }\n    // console.log(this.zombies.length);\n  }\n\n  draw(context, xView, yView) {\n    for (let i = this.zombies.length-1; i >= 0; i--) {\n      if (i % 3 === 0) {\n        const zombie = this.zombies[i];\n        const zxPos = zombie[0] - this.radius - xView;\n        const zyPos = zombie[1] - this.radius - yView;\n        this.drawSegment(context, zxPos, zyPos, true)\n      }\n    }\n    const xPos = (this.x - this.radius) - xView;\n    const yPos = (this.y - this.radius) - yView;\n    this.drawSegment(context, xPos, yPos, true);\n  }\n\n  update(velocityScale, worldWidth, worldHeight) {\n    if (this.size > this.zombies.length) {\n      for (let i = 0; i < this.size-this.zombies.length; i++) {\n        this.zombies.push([])\n      }\n    }\n    let nextX = this.x;\n    let nextY = this.y;\n    for (let i = 0; i < this.zombies.length; i++) {\n      let zX = nextX;\n      let zY = nextY;\n      nextX = this.zombies[i][0];\n      nextY = this.zombies[i][1];\n      this.zombies[i] = [zX, zY];\n    }\n\n    if (this.size <= 20) {\n      this.boosting = false;\n      this.speedMultiplier = Player.NORMAL_SPEED;\n    }\n\n    this.x += (this.velX * velocityScale) * this.speedMultiplier;\n    this.y += (this.velY * velocityScale) * this.speedMultiplier;\n\n    if (this.x - this.radius < 0) {\n      // this.die();\n      this.x = this.radius\n      // this.game.playerDie(this);\n    }\n    if (this.y - this.radius < 0) {\n      // this.die();\n      this.y = this.radius\n      // this.game.playerDie(this);\n    }\n    if (this.x + this.radius > worldWidth) {\n      // this.die();\n      this.x = worldWidth-this.radius;\n      // this.game.playerDie(this);\n    }\n    if (this.y + this.radius > worldHeight) {\n      // this.die();\n      this.y = worldHeight-this.radius\n      // this.game.playerDie(this);\n    }\n\n    if (this.boosting) {\n      this.shrink();\n    }\n  }\n\n  boost() {\n    this.speedMultiplier = Player.BOOSTED_SPEED;\n    this.boosting = true;\n  }\n\n  unboost() {\n    this.speedMultiplier = Player.NORMAL_SPEED;\n    this.boosting = false;\n  }\n\n  changeXVel(x) {\n    this.velX = x;\n  }\n\n  changeYVel(y) {\n    this.velY = y;\n  }\n\n  changeBoost(speed) {\n    this.speedMultiplier = speed;\n  }\n\n}\n\nPlayer.NORMAL_SPEED = 3;\nPlayer.BOOSTED_SPEED = 5;\n\nexport default Player;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/player.js","import World from './world';\nimport Player from './player';\nimport Viewport from './viewport';\nimport Nectar from './nectar';\nimport * as Util from './util';\n\n\nclass Game {\n  constructor(context, canvas, socket) {\n    this.canvas = canvas;\n    this.context = context;\n    this.socket = socket;\n    this.world = new World(3000, 3000);\n    this.viewport = new Viewport(0, 0, this.canvas.width, this.canvas.height, this.world.width, this.world.height);\n    this.nectar = [];\n    this.players = {};\n    // this.playersArr = Object.values(this.players);\n    this.nectarCount = 100;\n    this.currentPlayerId = null;\n    // this.setup();\n    this.inputs = 0;\n\n    this.addPlayer = this.addPlayer.bind(this);\n  }\n\n  setup() {\n    // debugger\n    this.handleInput();\n    this.world.generate();\n    this.viewport.follow(this.players[this.currentPlayerId], this.canvas.width / 2, this.canvas.height / 2);\n    this.start(); // run client physics loop\n  }\n\n  populate() {\n    for (let i = 0; i < this.nectarCount; i++) {\n      this.addNectar();\n    }\n  }\n\n  setCurrentPlayerId(id) {\n    this.currentPlayerId = id;\n  }\n\n  add(object) {\n    if (object instanceof Player) {\n      this.players[object.id] = object\n      // this.players.push(object);\n    } else if (object instanceof Nectar) {\n      this.nectar.push(object);\n    } else {\n      throw \"unknown type of object\";\n    }\n  }\n\n  addPlayer(id) {\n    const player = new Player(id, 50, 50, 20, this);\n    this.add(player);\n    this.setCurrentPlayerId(id);\n  }\n\n  gameObjects() {\n    return [this.world].concat(this.nectar).concat(Object.values(this.players))\n  }\n\n  addNectar(x, y, r, c) {\n    const xPos = x || Util.getRandomInt(1, this.world.width);\n    const yPos = y || Util.getRandomInt(1, this.world.width);\n    const radius = r || Util.getRandomInt(3, 8);\n    const color = c || Util.randomColor();\n    const nectar = new Nectar(xPos, yPos, radius, c);\n    this.add(nectar);\n  }\n\n  // playerDie(player) {\n  //   const coords = player.zombies;\n  //   for (let i = 0; i < coords.length; i++) {\n  //     if (i % 4 === 0) {\n  //       const x = Util.getRandomInt(coords[i][0] - 12, coords[i][0] + 12);\n  //       const y = Util.getRandomInt(coords[i][1] - 12, coords[i][1] + 12);\n  //       const r = Util.getRandomInt(3, 8);\n  //       const c = this.players[player.id].color\n  //       this.addNectar(x, y, r, c);\n  //     }\n  //   }\n  //   this.removePlayer(player);\n  // }\n\n  removePlayer(player) {\n    delete this.players[player.id];\n  }\n\n  update(delta) {\n    const normal_frame_time = Game.PHYSICS_FRAME_RATE;\n    const velocityScale = delta / normal_frame_time\n\n    Object.values(this.players).forEach((player) => {\n      player.update(velocityScale, this.world.width, this.world.height);\n    });\n\n    if (this.players[this.currentPlayerId]) {\n      this.viewport.update(this.players[this.currentPlayerId].x, this.players[this.currentPlayerId].y);\n    }\n    // this.handleCollisions();\n  }\n\n  draw() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.gameObjects().forEach((object) => {\n      object.draw(this.context, this.viewport.xView, this.viewport.yView);\n    });\n  }\n\n  // handleCollisions() {\n  //   this.nectar.forEach((nectar) => {\n  //     Object.values(this.players).forEach((player) => {\n  //       const centerDist = Util.dist([player.x, player.y], [nectar.x, nectar.y]);\n  //       if (centerDist < (player.radius + nectar.radius)) {\n  //         nectar.relocate(this.world.width, this.world.height);\n  //         for (let i = 0; i < nectar.radius / 3; i++) {\n  //           player.grow();\n  //         }\n  //       }\n  //     });\n  //   });\n  // }\n\n  start() {\n    this.lastTime = Date.now();\n    this.requestId = window.setInterval(this.physicsLoop.bind(this), Game.PHYSICS_FRAME_RATE);\n  }\n\n  physicsLoop() {\n    // if (!this.lastTime) {\n    //   this.lastTime = Date.now();\n    // }\n    const time = Date.now();\n    const delta = time - this.lastTime;\n    // console.log(delta);\n    // this.socket.emit('player position', [this.players[window.playerId].x, this.players[window.playerId].y])\n    this.update(delta);\n    this.draw();\n    this.lastTime = time;\n    // this.requestId = window.requestAnimationFrame(this.physicsLoop.bind(this))\n  }\n\n  updateLoop() {\n\n  }\n\n  updatePlayerVelocity(targetRadians) {\n    const player = this.players[this.currentPlayerId]\n    if (player) {\n      // send client input to server\n      this.socket.emit(\"player move\", {\n        id: this.currentPlayerId,\n        pos: targetRadians,\n        num: this.inputs += 1,\n        timestamp: Date.now()\n      });\n\n      // radians corresponding to players current velocity\n      const startRadians =  Util.vectorToRadians(player.velX, player.velY);\n      // player current velocity moved in the direction of the target velocity by PI/32 radians\n      const [newX, newY] = Util.calculateNewVector(startRadians, targetRadians);\n\n      player.inputs.push({ seq: this.inputs, x: player.x, y: player.y })\n\n      player.changeXVel(newX);\n      player.changeYVel(newY);\n      // console.log(player.zombies.length, player.size);\n      // console.log(`last input id: ${this.inputs}\\txVel: ${newX}\\tyVel: ${newY}\\tx: ${player.x}\\ty: ${player.y}`);\n    }\n  }\n\n  handleInput() {\n    let down = false;\n    document.addEventListener(\"keydown\", (e) => {\n\n      if (e.key === \" \") {\n        e.preventDefault();\n        if (down) {\n          return\n        }\n        this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"on\"} );\n        this.players[this.currentPlayerId].boost();\n        down = true;\n      }\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n      e.preventDefault()\n      if (e.key === \" \") {\n        if (down) {\n          down = false;\n        }\n        this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"off\"});\n        this.players[this.currentPlayerId].unboost();\n      }\n    });\n\n    document.addEventListener('mousedown', (e) => {\n      e.preventDefault();\n      this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"on\"});\n      this.players[this.currentPlayerId].boost();\n    });\n\n    document.addEventListener('mouseup', (e) => {\n      e.preventDefault();\n      this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"off\"});\n      this.players[this.currentPlayerId].unboost();\n    });\n\n    document.addEventListener('mousemove', (e) => {\n      e.preventDefault();\n      if (this.players[this.currentPlayerId]) {\n        // top-left coordinates of the canvas on the document\n        const canvasCoords = this.canvas.getBoundingClientRect();\n\n        // the 'origin' -> coordinates of the player relative to the top-left corner of the canvas\n        const oX = canvasCoords.left + (this.players[this.currentPlayerId].x - this.viewport.xView);\n        const oY = canvasCoords.top + (this.players[this.currentPlayerId].y - this.viewport.yView);\n\n        // console.log(oX, oY)\n        // coordinates of mouse position on document\n        const mX = e.clientX;\n        const mY = e.clientY;\n\n        // difference between mouse coords and origin coords\n        const dX = (mX - oX);\n        const dY = (mY - oY);\n\n        // radians that correspond to vector from origin to mouse coords\n        const targetRadians = Util.vectorToRadians(dX, dY);\n        this.updatePlayerVelocity(targetRadians);\n\n      }\n    });\n  }\n}\n\nGame.WORLD_WIDTH = 3000;\nGame.WORLD_HEIGHT = 3000;\nGame.PHYSICS_FRAME_RATE = 1000/66.666;\n\nexport default Game;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/game.js","import Game from './game';\nimport * as Util from './util';\nimport Player from './player';\n\n\nclass GameView {\n  constructor(context, canvas, socket) {\n    this.canvas = canvas;\n    this.context = context;\n    this.socket = socket;\n    this.game = new Game(this.context, this.canvas, this.socket);\n    this.currentPlayerId = null;\n    this.count = 0;\n    this.moveNum = 0;\n    this.listen();\n  }\n\n  listen() {\n    this.socket.on(\"on connected\", this.start.bind(this));\n    // this.socket.on(\"new player\", this.registerNewPlayer.bind(this));\n    this.socket.on(\"update game\", this.draw.bind(this));\n    this.socket.on(\"update\", this.update.bind(this));\n    this.socket.on(\"player disconnected\", this.onPlayerDisconnected.bind(this));\n    this.socket.on(\"players\", this.onReceivePlayers.bind(this));\n    // this.socket.on(\"remove player\", this.removePlayer.bind(this))\n  }\n\n  start(data) {\n    console.log( 'Connected successfully to the socket.io server. My server side ID is ' + data.id );\n\n    this.currentPlayerId = data.id;\n    this.game.addPlayer(data.id);\n    // debugger\n    this.game.setup();\n    // this.game.handleInput();\n  }\n\n  update(data) {\n    // console.log(\"data.players\", Object.keys(data.players))\n    // console.log(\"this.game.players\",Object.keys(this.game.players))\n    // Object.values(data.players).forEach((d) => {\n    //   const player = this.game.players[d.id];\n    //   if (player) {\n    //     this.moveNum = d.moveNum;\n    //     player.update(0, this.game.worldWidth, this.game.worldHeight)\n    //   } else {\n    //     const existingPlayer = new Player(d.id, d.pos[0], d.pos[1], d.zombies.length, this.game, d.color);\n    //     existingPlayer.radius = d.radius;\n    //     this.game.players[d.id] = existingPlayer;\n    //   }\n    // }, this);\n    // Object.keys(this.game.players).forEach((id) => {\n    //   if (!Object.keys(data.players).includes(id)) {\n    //     delete this.game.players[id];\n    //   }\n    // })\n    // this.game.nectar = data.nectar;\n  }\n\n  onReceivePlayers(data) {\n    // console.log(data);\n  }\n\n  // registerNewPlayer(data) {\n  //   const newPlayer = new Player(data.id, data.x, data.y, 75, this.game, data.color);\n  //   this.game.players[data.id] = newPlayer;\n  // }\n\n  onPlayerDisconnected(data) {\n    console.log(data);\n    delete this.game.players[data]\n  }\n\n  // removePlayer(data) {\n  //   this.game.removePlayer(data.userId);\n  //   delete this.game.players[data];\n  //   console.log(Object.values(this.game.players).length)\n  // }\n\n  updatePlayer(id, pos, speed, vel, radius, size, color, zombies, boosting) {\n    const player = this.game.players[id];\n    if (player) {\n      player.x = pos[0];\n      player.y = pos[1];\n      // player.speedMultiplier = speed;\n      player.color = color;\n      player.boosting = boosting;\n      player.radius = radius;\n      player.size = size;\n      player.zombies = zombies;\n      player.changeXVel(vel[0])\n      player.changeYVel(vel[1])\n      // player.update(0, this.game.worldWidth, this.game.worldHeight)\n    } else {\n      const existingPlayer = new Player(id, pos[0], pos[1], zombies.length, this.game, color);\n      existingPlayer.radius = radius;\n      this.game.players[id] = existingPlayer;\n    }\n  }\n\n  draw(data) {\n  \n    Object.values(data.players).forEach((player) => {\n      this.updatePlayer(player.id, player.pos, player.speed, player.vel, player.radius, player.size, player.color, player.zombies, player.boosting);\n      // console.log(this.game.players[player.id].x, this.game.players[player.id].y)\n    }, this);\n    Object.keys(this.game.players).forEach((id) => {\n      if (!Object.keys(data.players).includes(id)) {\n        delete this.game.players[id];\n      }\n    }, this);\n    this.game.nectar = [];\n    Object.values(data.nectar).forEach((nectar) => {\n      if (nectar) {\n        // console.log(nectar.shadow)\n        this.game.addNectar(nectar.x, nectar.y, nectar.radius, nectar.color, nectar.shadow);\n      }\n    });\n    if (this.game.players[this.currentPlayerId]) {\n      const currentPlayer = this.game.players[this.currentPlayerId];\n      this.game.viewport.update(currentPlayer.x, currentPlayer.y);\n      // this.game.viewport.update(this.game.players[this.currentPlayerId].x, this.game.players[this.currentPlayerId].y);\n    }\n    this.game.draw();\n  }\n\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('game-canvas');\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  const context = canvas.getContext(\"2d\");\n  const socket = io();\n  const game_view = new GameView(context, canvas, socket);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/game_view.js","import * as Util from './util';\n\nclass Nectar {\n  constructor(x, y, radius, color, shadow) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color || Util.randomColor();\n    this.shadow = shadow || 30;\n  }\n\n  rotate() {\n\n  }\n\n  relocate(width, height) {\n    this.x = Util.getRandomInt(1, width);\n    this.y = Util.getRandomInt(1, height);\n  }\n\n  draw(context, xView, yView) {\n    context.save();\n    context.beginPath();\n    context.shadowColor = this.color;\n    context.shadowBlur = this.shadow;\n    // context.fillStyle = \"#9850FF\";\n    context.fillStyle = this.color;\n    // context.lineWidth = 1;\n    context.arc(this.x+this.radius - xView, this.y+this.radius - yView, this.radius, 0, Math.PI * 2, false);\n    context.fill();\n    context.closePath();\n    context.restore();\n  }\n}\n\nexport default Nectar;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/nectar.js","\nclass Viewport {\n  constructor(xView, yView, canvasWidth, canvasHeight, worldWidth, worldHeight) {\n    this.xView = xView || 0;\n    this.yView = yView || 0;\n\n    // distance from followed object to border before camera starts to move\n    this.xDeadZone = 0;\n    this.yDeadZone = 0;\n\n    // viewport dimensions\n    this.wView = canvasWidth;\n    this.hView = canvasHeight;\n\n    this.followed = null;\n\n    this.worldWidth = worldWidth;\n    this.worldHeight = worldHeight;\n  }\n\n  follow(gameObject, xDeadZone, yDeadZone) {\n    this.followed = gameObject;\n    this.xDeadZone = xDeadZone;\n    this.yDeadZone = yDeadZone;\n  }\n\n  update(x, y) {\n    // console.log(this.followed.x)\n    this.followed.x = x;\n    this.followed.y = y;\n    if ((this.followed.x - this.xView + this.xDeadZone) > this.wView) {\n      this.xView = this.followed.x - (this.wView - this.xDeadZone);\n    } else if (this.followed.x - this.xDeadZone < this.xView) {\n      this.xView = this.followed.x - this.xDeadZone;\n    }\n\n    if ((this.followed.y - this.yView + this.yDeadZone) > this.hView) {\n      this.yView = this.followed.y - (this.hView - this.yDeadZone);\n    } else if (this.followed.y - this.yDeadZone < this.yView) {\n      this.yView = this.followed.y - this.yDeadZone;\n    }\n\n    if (this.xView < 0) {\n      this.xView = 0\n    }\n    if (this.yView < 0) {\n      this.yView = 0\n    }\n    if (this.xView + this.wView > this.worldWidth) {\n      this.xView = this.worldWidth - this.wView;\n    }\n    if (this.yView + this.hView > this.worldHeight) {\n      this.yView = this.worldHeight - this.hView;\n    }\n    // }\n  }\n}\n\nexport default Viewport;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/viewport.js","class World {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  generate() {\n    let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    ctx.canvas.width = this.width;\n    ctx.canvas.height = this.height;\n\n    const rows = ~~(this.width/88) + 1;\n    const columns = ~~(this.height/88) + 1;\n\n    ctx.fillStyle = \"#070B0F\";\n    ctx.fillRect(0, 0, this.width, this.height);\n    ctx.save();\n\n    for (let x = 0; x < rows; x++) {\n      ctx.beginPath();\n      for (let y = 0; y < columns; y++) {\n        ctx.rect(x*88, y*88, 84, 84);\n      }\n      ctx.fillStyle = \"#23292E\";\n      ctx.fill();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n\n    this.image = new Image();\n    this.image.src = ctx.canvas.toDataURL(\"image/png\");\n    ctx = null;\n  }\n\n  draw(context, xView, yView) {\n    context.drawImage(\n      this.image,\n      0,\n      0,\n      this.image.width,\n      this.image.height,\n      -xView,\n      -yView,\n      this.image.width,\n      this.image.height\n    );\n  }\n}\n\n\nexport default World;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/world.js"],"sourceRoot":""}