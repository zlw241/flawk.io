{"version":3,"sources":["webpack:///webpack/bootstrap 561bd880e3b0aa9f5d56","webpack:///./lib/client/util.js","webpack:///./lib/client/player.js","webpack:///./lib/client/game.js","webpack:///./lib/client/game_view.js","webpack:///./lib/client/nectar.js","webpack:///./lib/client/viewport.js","webpack:///./lib/client/world.js"],"names":["dist","randomPos","getRandomInt","randomColor","slopeToDegrees","vectorToRadians","radiansToVector","radiansToDegrees","degreesToRadians","calculateNewVector","pos1","pos2","Math","sqrt","pow","width","height","x","random","y","min","max","floor","colors","length","atan2","radians","sin","cos","PI","degrees","startRadians","targetRadians","newX","newY","Util","Player","id","size","game","color","velX","velY","speedMultiplier","boosting","count","radius","zombies","i","push","context","xPos","yPos","stroke","save","beginPath","fillStyle","strokeStyle","lineWidth","shadowColor","shadowBlur","arc","fill","closePath","restore","lastZombie","nectarCoords","pop","addNectar","xView","yView","zombie","zxPos","zyPos","drawSegment","speed","Game","canvas","socket","world","viewport","nectar","players","nectarCount","currentPlayerId","inputs","handleInput","generate","follow","object","player","add","setCurrentPlayerId","concat","Object","values","r","c","clearRect","gameObjects","forEach","draw","requestId","window","requestAnimationFrame","gameLoop","bind","down","document","addEventListener","e","key","preventDefault","emit","status","canvasCoords","getBoundingClientRect","oX","left","oY","top","mX","clientX","mY","clientY","dX","dY","pos","num","timestamp","Date","now","GameView","moveNum","listen","on","start","registerNewPlayer","update","onPlayerDisconnected","onReceivePlayers","data","console","log","addPlayer","setup","newPlayer","vel","changeXVel","changeYVel","existingPlayer","updatePlayer","keys","includes","shadow","getElementById","innerWidth","innerHeight","getContext","io","game_view","Nectar","Viewport","canvasWidth","canvasHeight","worldWidth","worldHeight","xDeadZone","yDeadZone","wView","hView","followed","gameObject","World","ctx","createElement","rows","columns","fillRect","rect","image","Image","src","toDataURL","drawImage"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;QChEgBA,I,GAAAA,I;QAMAC,S,GAAAA,S;QAMAC,Y,GAAAA,Y;QAIAC,W,GAAAA,W;QAKAC,c,GAAAA,c;QAIAC,e,GAAAA,e;QAIAC,e,GAAAA,e;QAMAC,gB,GAAAA,gB;QAIAC,gB,GAAAA,gB;QAIAC,kB,GAAAA,kB;AA3CT,SAAST,IAAT,CAAcU,IAAd,EAAoBC,IAApB,EAA0B;AAC/B,SAAOC,KAAKC,IAAL,CACLD,KAAKE,GAAL,CAASJ,KAAK,CAAL,IAAUC,KAAK,CAAL,CAAnB,EAA4B,CAA5B,IAAiCC,KAAKE,GAAL,CAASJ,KAAK,CAAL,IAAUC,KAAK,CAAL,CAAnB,EAA4B,CAA5B,CAD5B,CAAP;AAGD;;AAEM,SAASV,SAAT,CAAmBc,KAAnB,EAA0BC,MAA1B,EAAkC;AACvC,MAAMC,IAAIL,KAAKM,MAAL,KAAgBH,KAA1B;AACA,MAAMI,IAAIP,KAAKM,MAAL,KAAgBF,MAA1B;AACA,SAAO,CAACC,CAAD,EAAIE,CAAJ,CAAP;AACD;;AAEM,SAASjB,YAAT,CAAsBkB,GAAtB,EAA2BC,GAA3B,EAAgC;AACrC,SAAOT,KAAKU,KAAL,CAAWV,KAAKM,MAAL,MAAiBG,MAAMD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD;;AAEM,SAASjB,WAAT,GAAuB;AAC5B,MAAMoB,SAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CAAf;AACA,SAAOA,OAAOX,KAAKU,KAAL,CAAWV,KAAKM,MAAL,KAAgBK,OAAOC,MAAlC,CAAP,CAAP;AACD;;AAEM,SAASpB,cAAT,CAAwBa,CAAxB,EAA2BE,CAA3B,EAA8B;AACnC,SAAOP,KAAKa,KAAL,CAAWN,CAAX,EAAcF,CAAd,CAAP;AACD;;AAEM,SAASZ,eAAT,CAAyBY,CAAzB,EAA4BE,CAA5B,EAA+B;AACpC,SAAOP,KAAKa,KAAL,CAAWN,CAAX,EAAcF,CAAd,CAAP;AACD;;AAEM,SAASX,eAAT,CAAyBoB,OAAzB,EAAkC;AACvC,MAAMP,IAAIP,KAAKe,GAAL,CAASD,OAAT,CAAV;AACA,MAAMT,IAAIL,KAAKgB,GAAL,CAASF,OAAT,CAAV;AACA,SAAO,CAACT,CAAD,EAAIE,CAAJ,CAAP;AACD;;AAEM,SAASZ,gBAAT,CAA0BmB,OAA1B,EAAmC;AACxC,SAAOA,WAAWd,KAAKiB,EAAL,GAAU,GAArB,CAAP;AACD;;AAEM,SAASrB,gBAAT,CAA0BsB,OAA1B,EAAmC;AACxC,SAAOA,WAAWlB,KAAKiB,EAAL,GAAU,GAArB,CAAP;AACD;;AAEM,SAASpB,kBAAT,CAA4BsB,YAA5B,EAA0CC,aAA1C,EAAyD;AAC9D,MAAID,eAAe,CAAf,IAAoBC,gBAAgB,CAAxC,EAA2C;AACzC,QAAID,eAAeC,aAAnB,EAAkC;AAAA,6BACb1B,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADa;AAAA;AAAA,UAC3BI,IAD2B;AAAA,UACrBC,IADqB;AAEjC,KAFD,MAEO;AAAA,8BACc5B,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADd;AAAA;AAAA,UACAI,IADA;AAAA,UACMC,IADN;AAEN;AACF,GAND,MAMO,IAAIH,eAAe,CAAf,IAAoBC,gBAAgB,CAAxC,EAA2C;AAChD,QAAID,eAAeC,aAAnB,EAAkC;AAAA,8BACb1B,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADa;AAAA;AAAA,UAC3BI,IAD2B;AAAA,UACrBC,IADqB;AAEjC,KAFD,MAEO;AAAA,8BACc5B,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADd;AAAA;AAAA,UACAI,IADA;AAAA,UACMC,IADN;AAEN;AACF,GANM,MAMA,IAAIH,eAAe,CAAf,IAAoBC,gBAAgB,CAAxC,EAA2C;AAChD,QAAIA,gBAAgBxB,iBAAiB,GAAjB,CAAhB,GAAwCuB,YAA5C,EAA0D;AAAA,8BACrCzB,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADqC;AAAA;AAAA,UACnDI,IADmD;AAAA,UAC7CC,IAD6C;AAEzD,KAFD,MAEO;AAAA,+BACc5B,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADd;AAAA;AAAA,UACAI,IADA;AAAA,UACMC,IADN;AAEN;AACF,GANM,MAMA;AACL,QAAIF,gBAAgBxB,iBAAiB,GAAjB,CAAhB,GAAwCuB,YAA5C,EAA0D;AAAA,+BACrCzB,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADqC;AAAA;AAAA,UACnDI,IADmD;AAAA,UAC7CC,IAD6C;AAEzD,KAFD,MAEO;AAAA,+BACc5B,gBAAgByB,eAAgBnB,KAAKiB,EAAL,GAAU,EAA1C,CADd;AAAA;AAAA,UACAI,IADA;AAAA,UACMC,IADN;AAEN;AACF;AACD,SAAO,CAACD,IAAD,EAAOC,IAAP,CAAP;AACD,C;;;;;;;;;;;;;;;ACtED;;IAAYC,I;;;;;;IAENC,M;AACJ,kBAAYC,EAAZ,EAAgBpB,CAAhB,EAAmBE,CAAnB,EAAsBmB,IAAtB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AAAA;;AACvC,SAAKH,EAAL,GAAUA,EAAV;AACA,SAAKpB,CAAL,GAASA,CAAT;AACA,SAAKE,CAAL,GAASA,CAAT;AACA,SAAKmB,IAAL,GAAYA,IAAZ;;AAEA,SAAKE,KAAL,GAAaA,SAASL,KAAKhC,WAAL,EAAtB;AACA,SAAKoC,IAAL,GAAYA,IAAZ;;AAEA,SAAKE,IAAL,GAAY,GAAZ;AACA,SAAKC,IAAL,GAAY,GAAZ;;AAEA,SAAKC,eAAL,GAAuB,CAAvB;;AAEA,SAAK5B,KAAL,GAAa,EAAb;AACA,SAAKC,MAAL,GAAc,EAAd;;AAEA,SAAK4B,QAAL,GAAgB,KAAhB;AACA,SAAKC,KAAL,GAAa,CAAb;;AAEA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKV,IAAzB,EAA+BU,GAA/B,EAAoC;AAClC,WAAKD,OAAL,CAAaE,IAAb,CAAkB,CAAC,KAAKhC,CAAN,EAAS,KAAKE,CAAd,EAAiB,CAAC,KAAKsB,IAAN,EAAY,KAAKC,IAAjB,CAAjB,CAAlB;AACD;AACF;;;;gCAEWQ,O,EAASC,I,EAAMC,I,EAAMC,M,EAAQ;AACvCH,cAAQI,IAAR;AACAJ,cAAQK,SAAR;AACAL,cAAQM,SAAR,GAAoB,KAAKhB,KAAzB;AACAU,cAAQO,WAAR,GAAsB,MAAtB;AACAP,cAAQQ,SAAR,GAAoB,CAApB;AACA,UAAI,KAAKd,QAAT,EAAmB;AACjBM,gBAAQS,WAAR,GAAsB,KAAKnB,KAA3B;AACAU,gBAAQU,UAAR,GAAqB,EAArB;AACD;AACDV,cAAQW,GAAR,CAAYV,OAAO,KAAKL,MAAxB,EAAgCM,OAAO,KAAKN,MAA5C,EAAqD,KAAKA,MAA1D,EAAkE,CAAlE,EAAqElC,KAAKiB,EAAL,GAAU,CAA/E,EAAkF,KAAlF;AACAqB,cAAQY,IAAR;AACAZ,cAAQG,MAAR;AACAH,cAAQa,SAAR;AACAb,cAAQc,OAAR;AAED;;;2BAEM;AACL,UAAMC,aAAa,KAAKlB,OAAL,CAAa,KAAKT,IAAL,GAAU,CAAvB,CAAnB;AACA,WAAKS,OAAL,CAAaE,IAAb,CAAkBgB,UAAlB;AACA,WAAK3B,IAAL,IAAa,CAAb;AACA,WAAKQ,MAAL,IAAe,IAAf;AACD;;;6BAEQ;AACP,UAAI,KAAKD,KAAL,KAAe,EAAnB,EAAuB;AACrB,YAAMqB,eAAe,KAAKnB,OAAL,CAAaoB,GAAb,EAArB;AACA;AACA,aAAK5B,IAAL,CAAU6B,SAAV,CAAoBF,aAAa,CAAb,CAApB,EAAqCA,aAAa,CAAb,CAArC,EAAsD,CAAtD,EAAyD,KAAK1B,KAA9D;AACA,aAAKF,IAAL,IAAa,CAAb;AACA,aAAKQ,MAAL,IAAe,IAAf;AACA,aAAKD,KAAL,GAAa,CAAb;AACD,OAPD,MAOO;AACL,aAAKA,KAAL,IAAc,CAAd;AACD;AACD;AACD;;;yBAEIK,O,EAASmB,K,EAAOC,K,EAAO;AAC1B,WAAK,IAAItB,IAAI,KAAKD,OAAL,CAAavB,MAAb,GAAoB,CAAjC,EAAoCwB,KAAK,CAAzC,EAA4CA,GAA5C,EAAiD;AAC/C,YAAIA,IAAI,CAAJ,KAAU,CAAd,EAAiB;AACf,cAAMuB,SAAS,KAAKxB,OAAL,CAAaC,CAAb,CAAf;AACA,cAAMwB,QAAQD,OAAO,CAAP,IAAY,KAAKzB,MAAjB,GAA0BuB,KAAxC;AACA,cAAMI,QAAQF,OAAO,CAAP,IAAY,KAAKzB,MAAjB,GAA0BwB,KAAxC;AACA,eAAKI,WAAL,CAAiBxB,OAAjB,EAA0BsB,KAA1B,EAAiCC,KAAjC,EAAwC,IAAxC;AACD;AACF;AACD,UAAMtB,OAAQ,KAAKlC,CAAL,GAAS,KAAK6B,MAAf,GAAyBuB,KAAtC;AACA,UAAMjB,OAAQ,KAAKjC,CAAL,GAAS,KAAK2B,MAAf,GAAyBwB,KAAtC;AACA,WAAKI,WAAL,CAAiBxB,OAAjB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC,IAAtC;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;4BAEQ;AACN,WAAKT,eAAL,GAAuB,EAAvB;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACD;;;8BAES;AACR,WAAKD,eAAL,GAAuB,CAAvB;AACA,WAAKC,QAAL,GAAgB,KAAhB;AACD;;;+BAEU3B,C,EAAG;AACZ,WAAKwB,IAAL,GAAYxB,CAAZ;AACD;;;+BAEUE,C,EAAG;AACZ,WAAKuB,IAAL,GAAYvB,CAAZ;AACD;;;gCAEWwD,K,EAAO;AACjB,WAAKhC,eAAL,GAAuBgC,KAAvB;AACD;;;;;;kBAIYvC,M;;;;;;;;;;;;;;;;;AC3Jf;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYD,I;;;;;;;;IAGNyC,I;AACJ,gBAAY1B,OAAZ,EAAqB2B,MAArB,EAA6BC,MAA7B,EAAqC;AAAA;;AACnC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAK3B,OAAL,GAAeA,OAAf;AACA,SAAK4B,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,oBAAU,IAAV,EAAgB,IAAhB,CAAb;AACA,SAAKC,QAAL,GAAgB,uBAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAKH,MAAL,CAAY9D,KAA/B,EAAsC,KAAK8D,MAAL,CAAY7D,MAAlD,EAA0D,KAAK+D,KAAL,CAAWhE,KAArE,EAA4E,KAAKgE,KAAL,CAAW/D,MAAvF,CAAhB;AACA,SAAKiE,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAe,EAAf;AACA;AACA,SAAKC,WAAL,GAAmB,GAAnB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA;AACA,SAAKC,MAAL,GAAc,CAAd;AAED;;;;4BAEO;AACN,WAAKC,WAAL;AACA,WAAKP,KAAL,CAAWQ,QAAX;AACA,WAAKP,QAAL,CAAcQ,MAAd,CAAqB,KAAKN,OAAL,CAAa,KAAKE,eAAlB,CAArB,EAAyD,KAAKP,MAAL,CAAY9D,KAAZ,GAAoB,CAA7E,EAAgF,KAAK8D,MAAL,CAAY7D,MAAZ,GAAqB,CAArG;AACA;AACD;;;+BAEU;AACT,WAAK,IAAIgC,IAAI,CAAb,EAAgBA,IAAI,KAAKmC,WAAzB,EAAsCnC,GAAtC,EAA2C;AACzC,aAAKoB,SAAL;AACD;AACF;;;uCAEkB/B,E,EAAI;AACrB,WAAK+C,eAAL,GAAuB/C,EAAvB;AACD;;;wBAEGoD,M,EAAQ;AACV,UAAIA,kCAAJ,EAA8B;AAC5B,aAAKP,OAAL,CAAaO,OAAOpD,EAApB,IAA0BoD,MAA1B;AACA;AACD,OAHD,MAGO,IAAIA,kCAAJ,EAA8B;AACnC,aAAKR,MAAL,CAAYhC,IAAZ,CAAiBwC,MAAjB;AACD,OAFM,MAEA;AACL,cAAM,wBAAN;AACD;AACF;;;8BAESpD,E,EAAI;AACZ,UAAMqD,SAAS,qBAAWrD,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,IAA3B,CAAf;AACA,WAAKsD,GAAL,CAASD,MAAT;AACA,WAAKE,kBAAL,CAAwBvD,EAAxB;AACD;;;kCAEa;AACZ,aAAO,CAAC,KAAK0C,KAAN,EAAac,MAAb,CAAoB,KAAKZ,MAAzB,EAAiCY,MAAjC,CAAwCC,OAAOC,MAAP,CAAc,KAAKb,OAAnB,CAAxC,CAAP;AACD;;;8BAESjE,C,EAAGE,C,EAAG6E,C,EAAGC,C,EAAG;AACpB,UAAM9C,OAAOlC,KAAKkB,KAAKjC,YAAL,CAAkB,CAAlB,EAAqB,KAAK6E,KAAL,CAAWhE,KAAhC,CAAlB;AACA,UAAMqC,OAAOjC,KAAKgB,KAAKjC,YAAL,CAAkB,CAAlB,EAAqB,KAAK6E,KAAL,CAAWhE,KAAhC,CAAlB;AACA,UAAM+B,SAASkD,KAAK7D,KAAKjC,YAAL,CAAkB,CAAlB,EAAqB,CAArB,CAApB;AACA,UAAMsC,QAAQyD,KAAK9D,KAAKhC,WAAL,EAAnB;AACA,UAAM8E,SAAS,qBAAW9B,IAAX,EAAiBC,IAAjB,EAAuBN,MAAvB,EAA+BmD,CAA/B,CAAf;AACA,WAAKN,GAAL,CAASV,MAAT;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iCAEaS,M,EAAQ;AACnB,aAAO,KAAKR,OAAL,CAAaQ,OAAOrD,EAApB,CAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;2BAEO;AAAA;;AACL,WAAKa,OAAL,CAAagD,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAAKrB,MAAL,CAAY9D,KAAzC,EAAgD,KAAK8D,MAAL,CAAY7D,MAA5D;AACA,WAAKmF,WAAL,GAAmBC,OAAnB,CAA2B,UAACX,MAAD,EAAY;AACrCA,eAAOY,IAAP,CAAY,MAAKnD,OAAjB,EAA0B,MAAK8B,QAAL,CAAcX,KAAxC,EAA+C,MAAKW,QAAL,CAAcV,KAA7D;AACD,OAFD;AAGD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;4BAEQ;AACN,WAAKgC,SAAL,GAAiBC,OAAOC,qBAAP,CAA6B,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAA7B,CAAjB;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;kCAEc;AAAA;;AACZ,UAAIC,OAAO,KAAX;AACAC,eAASC,gBAAT,CAA0B,SAA1B,EAAqC,UAACC,CAAD,EAAO;;AAE1C,YAAIA,EAAEC,GAAF,KAAU,GAAd,EAAmB;AACjBD,YAAEE,cAAF;AACA,cAAIL,IAAJ,EAAU;AACR;AACD;AACD,iBAAK7B,MAAL,CAAYmC,IAAZ,CAAiB,OAAjB,EAA0B,EAAE5E,IAAI,OAAK+C,eAAX,EAA4B8B,QAAQ,IAApC,EAA1B;AACAP,iBAAO,IAAP;AACD;AACF,OAVD;;AAYAC,eAASC,gBAAT,CAA0B,OAA1B,EAAmC,UAACC,CAAD,EAAO;AACxCA,UAAEE,cAAF;AACA,YAAIF,EAAEC,GAAF,KAAU,GAAd,EAAmB;AACjB,cAAIJ,IAAJ,EAAU;AACRA,mBAAO,KAAP;AACD;AACD,iBAAK7B,MAAL,CAAYmC,IAAZ,CAAiB,OAAjB,EAA0B,EAAE5E,IAAI,OAAK+C,eAAX,EAA4B8B,QAAQ,KAApC,EAA1B;AACD;AACF,OARD;;AAUAN,eAASC,gBAAT,CAA0B,WAA1B,EAAuC,UAACC,CAAD,EAAO;AAC5CA,UAAEE,cAAF;AACA,eAAKlC,MAAL,CAAYmC,IAAZ,CAAiB,OAAjB,EAA0B,EAAE5E,IAAI,OAAK+C,eAAX,EAA4B8B,QAAQ,IAApC,EAA1B;AAED,OAJD;;AAMAN,eAASC,gBAAT,CAA0B,SAA1B,EAAqC,UAACC,CAAD,EAAO;AAC1CA,UAAEE,cAAF;AACA,eAAKlC,MAAL,CAAYmC,IAAZ,CAAiB,OAAjB,EAA0B,EAAE5E,IAAI,OAAK+C,eAAX,EAA4B8B,QAAQ,KAApC,EAA1B;AACD,OAHD;;AAKAN,eAASC,gBAAT,CAA0B,WAA1B,EAAuC,UAACC,CAAD,EAAO;AAC5CA,UAAEE,cAAF;AACA,YAAI,OAAK9B,OAAL,CAAa,OAAKE,eAAlB,CAAJ,EAAwC;AACtC;AACA,cAAM+B,eAAe,OAAKtC,MAAL,CAAYuC,qBAAZ,EAArB;;AAEA;AACA,cAAMC,KAAKF,aAAaG,IAAb,IAAqB,OAAKpC,OAAL,CAAa,OAAKE,eAAlB,EAAmCnE,CAAnC,GAAuC,OAAK+D,QAAL,CAAcX,KAA1E,CAAX;AACA,cAAMkD,KAAKJ,aAAaK,GAAb,IAAoB,OAAKtC,OAAL,CAAa,OAAKE,eAAlB,EAAmCjE,CAAnC,GAAuC,OAAK6D,QAAL,CAAcV,KAAzE,CAAX;;AAEA;AACA,cAAMmD,KAAKX,EAAEY,OAAb;AACA,cAAMC,KAAKb,EAAEc,OAAb;;AAEA;AACA,cAAMC,KAAMJ,KAAKJ,EAAjB;AACA,cAAMS,KAAMH,KAAKJ,EAAjB;;AAEA,cAAMxF,eAAgBI,KAAK9B,eAAL,CAAqB,OAAK6E,OAAL,CAAa,OAAKE,eAAlB,EAAmC3C,IAAxD,EAA8D,OAAKyC,OAAL,CAAa,OAAKE,eAAlB,EAAmC1C,IAAjG,CAAtB;AACA,cAAMV,gBAAgBG,KAAK9B,eAAL,CAAqBwH,EAArB,EAAyBC,EAAzB,CAAtB;;AAjBsC,sCAkBjB3F,KAAK1B,kBAAL,CAAwBsB,YAAxB,EAAsCC,aAAtC,CAlBiB;AAAA;AAAA,cAkB/BC,IAlB+B;AAAA,cAkBzBC,IAlByB;;AAoBtC,iBAAK4C,MAAL,CAAYmC,IAAZ,CAAiB,aAAjB,EAAgC;AAC9B5E,gBAAI,OAAK+C,eADqB;AAE9B2C,iBAAK,CAAC9F,IAAD,EAAOC,IAAP,CAFyB;AAG9B8F,iBAAK,OAAK3C,MAAL,IAAe,CAHU;AAI9B4C,uBAAWC,KAAKC,GAAL;AAJmB,WAAhC;AAOD;AACD;AACA;AACD,OAhCD;AAiCD;;;;;;kBAIYvD,I;;;;;;;;;;;AC7Of;;;;AACA;;IAAYzC,I;;AACZ;;;;;;;;;;IAGMiG,Q;AACJ,oBAAYlF,OAAZ,EAAqB2B,MAArB,EAA6BC,MAA7B,EAAqC;AAAA;;AACnC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAK3B,OAAL,GAAeA,OAAf;AACA,SAAK4B,MAAL,GAAcA,MAAd;AACA,SAAKvC,IAAL,GAAY,mBAAS,KAAKW,OAAd,EAAuB,KAAK2B,MAA5B,EAAoC,KAAKC,MAAzC,CAAZ;AACA,SAAKM,eAAL,GAAuB,IAAvB;AACA,SAAKvC,KAAL,GAAa,CAAb;AACA,SAAKwF,OAAL,GAAe,CAAf;AACA,SAAKC,MAAL;AACD;;;;6BAEQ;AACP,WAAKxD,MAAL,CAAYyD,EAAZ,CAAe,aAAf,EAA8B,KAAKC,KAAL,CAAW9B,IAAX,CAAgB,IAAhB,CAA9B;AACA,WAAK5B,MAAL,CAAYyD,EAAZ,CAAe,YAAf,EAA6B,KAAKE,iBAAL,CAAuB/B,IAAvB,CAA4B,IAA5B,CAA7B;AACA,WAAK5B,MAAL,CAAYyD,EAAZ,CAAe,MAAf,EAAuB,KAAKlC,IAAL,CAAUK,IAAV,CAAe,IAAf,CAAvB;AACA,WAAK5B,MAAL,CAAYyD,EAAZ,CAAe,QAAf,EAAyB,KAAKG,MAAL,CAAYhC,IAAZ,CAAiB,IAAjB,CAAzB;AACA,WAAK5B,MAAL,CAAYyD,EAAZ,CAAe,qBAAf,EAAsC,KAAKI,oBAAL,CAA0BjC,IAA1B,CAA+B,IAA/B,CAAtC;AACA,WAAK5B,MAAL,CAAYyD,EAAZ,CAAe,SAAf,EAA0B,KAAKK,gBAAL,CAAsBlC,IAAtB,CAA2B,IAA3B,CAA1B;AACA;AACD;;;0BAEKmC,I,EAAM;AACVC,cAAQC,GAAR,CAAa,0EAA0EF,KAAKxG,EAA5F;;AAEA,WAAK+C,eAAL,GAAuByD,KAAKxG,EAA5B;AACA,WAAKE,IAAL,CAAUyG,SAAV,CAAoBH,KAAKxG,EAAzB;AACA,WAAKE,IAAL,CAAU0G,KAAV;AACA;AACD;;;2BAEMJ,I,EAAM;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;qCAEgBA,I,EAAM;AACrBC,cAAQC,GAAR,CAAYF,IAAZ;AACD;;;sCAEiBA,I,EAAM;AACtB,UAAMK,YAAY,qBAAWL,KAAKxG,EAAhB,EAAoBwG,KAAK5H,CAAzB,EAA4B4H,KAAK1H,CAAjC,EAAoC,EAApC,EAAwC,KAAKoB,IAA7C,EAAmDsG,KAAKrG,KAAxD,CAAlB;AACA,WAAKD,IAAL,CAAU2C,OAAV,CAAkB2D,KAAKxG,EAAvB,IAA6B6G,SAA7B;AACD;;;yCAEoBL,I,EAAM;AACzBC,cAAQC,GAAR,CAAYF,IAAZ;AACA,aAAO,KAAKtG,IAAL,CAAU2C,OAAV,CAAkB2D,IAAlB,CAAP;AACD;;AAED;AACA;AACA;AACA;AACA;;;;iCAEaxG,E,EAAI0F,G,EAAKpD,K,EAAOwE,G,EAAKrG,M,EAAQR,I,EAAME,K,EAAOO,O,EAASH,Q,EAAU;AACxE,UAAM8C,SAAS,KAAKnD,IAAL,CAAU2C,OAAV,CAAkB7C,EAAlB,CAAf;AACA,UAAIqD,MAAJ,EAAY;AACV;AACAA,eAAOzE,CAAP,GAAW8G,IAAI,CAAJ,CAAX;AACArC,eAAOvE,CAAP,GAAW4G,IAAI,CAAJ,CAAX;AACA;AACArC,eAAO9C,QAAP,GAAkBA,QAAlB;AACA8C,eAAO5C,MAAP,GAAgBA,MAAhB;AACA4C,eAAOpD,IAAP,GAAcA,IAAd;AACAoD,eAAO3C,OAAP,GAAiBA,OAAjB;AACA2C,eAAO0D,UAAP,CAAkBD,IAAI,CAAJ,CAAlB;AACAzD,eAAO2D,UAAP,CAAkBF,IAAI,CAAJ,CAAlB;AACA;AACD,OAZD,MAYO;AACL,YAAMG,iBAAiB,qBAAWjH,EAAX,EAAe0F,IAAI,CAAJ,CAAf,EAAuBA,IAAI,CAAJ,CAAvB,EAA+BhF,QAAQvB,MAAvC,EAA+C,KAAKe,IAApD,EAA0DC,KAA1D,CAAvB;AACA8G,uBAAexG,MAAf,GAAwBA,MAAxB;AACA,aAAKP,IAAL,CAAU2C,OAAV,CAAkB7C,EAAlB,IAAwBiH,cAAxB;AACD;AACF;;;yBAEIT,I,EAAM;AAAA;;AACT/C,aAAOC,MAAP,CAAc8C,KAAK3D,OAAnB,EAA4BkB,OAA5B,CAAoC,UAACV,MAAD,EAAY;AAC9C,cAAK6D,YAAL,CAAkB7D,OAAOrD,EAAzB,EAA6BqD,OAAOqC,GAApC,EAAyCrC,OAAOf,KAAhD,EAAuDe,OAAOyD,GAA9D,EAAmEzD,OAAO5C,MAA1E,EAAkF4C,OAAOpD,IAAzF,EAA+FoD,OAAOlD,KAAtG,EAA6GkD,OAAO3C,OAApH,EAA6H2C,OAAO9C,QAApI;AACD,OAFD,EAEG,IAFH;AAGAkD,aAAO0D,IAAP,CAAY,KAAKjH,IAAL,CAAU2C,OAAtB,EAA+BkB,OAA/B,CAAuC,UAAC/D,EAAD,EAAQ;AAC7C,YAAI,CAACyD,OAAO0D,IAAP,CAAYX,KAAK3D,OAAjB,EAA0BuE,QAA1B,CAAmCpH,EAAnC,CAAL,EAA6C;AAC3C,iBAAO,MAAKE,IAAL,CAAU2C,OAAV,CAAkB7C,EAAlB,CAAP;AACD;AACF,OAJD;AAKA,WAAKE,IAAL,CAAU0C,MAAV,GAAmB,EAAnB;AACAa,aAAOC,MAAP,CAAc8C,KAAK5D,MAAnB,EAA2BmB,OAA3B,CAAmC,UAACnB,MAAD,EAAY;AAC7C,YAAIA,MAAJ,EAAY;AACV;AACA,gBAAK1C,IAAL,CAAU6B,SAAV,CAAoBa,OAAOhE,CAA3B,EAA8BgE,OAAO9D,CAArC,EAAwC8D,OAAOnC,MAA/C,EAAuDmC,OAAOzC,KAA9D,EAAqEyC,OAAOyE,MAA5E;AACD;AACF,OALD;AAMA,UAAI,KAAKnH,IAAL,CAAU2C,OAAV,CAAkB,KAAKE,eAAvB,CAAJ,EAA6C;AAC3C,aAAK7C,IAAL,CAAUyC,QAAV,CAAmB0D,MAAnB,CAA0B,KAAKnG,IAAL,CAAU2C,OAAV,CAAkB,KAAKE,eAAvB,EAAwCnE,CAAlE,EAAqE,KAAKsB,IAAL,CAAU2C,OAAV,CAAkB,KAAKE,eAAvB,EAAwCjE,CAA7G;AACD;AACD,WAAKoB,IAAL,CAAU8D,IAAV;AACD;;;;;;AAKHO,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,MAAMhC,SAAS+B,SAAS+C,cAAT,CAAwB,aAAxB,CAAf;AACA9E,SAAO9D,KAAP,GAAewF,OAAOqD,UAAtB;AACA/E,SAAO7D,MAAP,GAAgBuF,OAAOsD,WAAvB;AACA,MAAM3G,UAAU2B,OAAOiF,UAAP,CAAkB,IAAlB,CAAhB;AACA,MAAMhF,SAASiF,IAAf;AACA,MAAMC,YAAY,IAAI5B,QAAJ,CAAalF,OAAb,EAAsB2B,MAAtB,EAA8BC,MAA9B,CAAlB;AACD,CAPD,E;;;;;;;;;;;;;;;AC5HA;;IAAY3C,I;;;;;;IAEN8H,M;AACJ,kBAAYhJ,CAAZ,EAAeE,CAAf,EAAkB2B,MAAlB,EAA0BN,KAA1B,EAAiCkH,MAAjC,EAAyC;AAAA;;AACvC,SAAKzI,CAAL,GAASA,CAAT;AACA,SAAKE,CAAL,GAASA,CAAT;AACA,SAAK2B,MAAL,GAAcA,MAAd;AACA,SAAKN,KAAL,GAAaA,SAASL,KAAKhC,WAAL,EAAtB;AACA,SAAKuJ,MAAL,GAAcA,UAAU,EAAxB;AACD;;;;6BAEQ,CAER;;;6BAEQ3I,K,EAAOC,M,EAAQ;AACtB,WAAKC,CAAL,GAASkB,KAAKjC,YAAL,CAAkB,CAAlB,EAAqBa,KAArB,CAAT;AACA,WAAKI,CAAL,GAASgB,KAAKjC,YAAL,CAAkB,CAAlB,EAAqBc,MAArB,CAAT;AACD;;;yBAEIkC,O,EAASmB,K,EAAOC,K,EAAO;AAC1BpB,cAAQI,IAAR;AACAJ,cAAQK,SAAR;AACAL,cAAQS,WAAR,GAAsB,KAAKnB,KAA3B;AACAU,cAAQU,UAAR,GAAqB,KAAK8F,MAA1B;AACA;AACAxG,cAAQM,SAAR,GAAoB,KAAKhB,KAAzB;AACA;AACAU,cAAQW,GAAR,CAAY,KAAK5C,CAAL,GAAO,KAAK6B,MAAZ,GAAqBuB,KAAjC,EAAwC,KAAKlD,CAAL,GAAO,KAAK2B,MAAZ,GAAqBwB,KAA7D,EAAoE,KAAKxB,MAAzE,EAAiF,CAAjF,EAAoFlC,KAAKiB,EAAL,GAAU,CAA9F,EAAiG,KAAjG;AACAqB,cAAQY,IAAR;AACAZ,cAAQa,SAAR;AACAb,cAAQc,OAAR;AACD;;;;;;kBAGYiG,M;;;;;;;;;;;;;;;;;IClCTC,Q;AACJ,oBAAY7F,KAAZ,EAAmBC,KAAnB,EAA0B6F,WAA1B,EAAuCC,YAAvC,EAAqDC,UAArD,EAAiEC,WAAjE,EAA8E;AAAA;;AAC5E,SAAKjG,KAAL,GAAaA,SAAS,CAAtB;AACA,SAAKC,KAAL,GAAaA,SAAS,CAAtB;;AAEA;AACA,SAAKiG,SAAL,GAAiB,CAAjB;AACA,SAAKC,SAAL,GAAiB,CAAjB;;AAEA;AACA,SAAKC,KAAL,GAAaN,WAAb;AACA,SAAKO,KAAL,GAAaN,YAAb;;AAEA,SAAKO,QAAL,GAAgB,IAAhB;;AAEA,SAAKN,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;;;2BAEMM,U,EAAYL,S,EAAWC,S,EAAW;AACvC,WAAKG,QAAL,GAAgBC,UAAhB;AACA,WAAKL,SAAL,GAAiBA,SAAjB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACD;;;2BAEMvJ,C,EAAGE,C,EAAG;AACX;AACA,WAAKwJ,QAAL,CAAc1J,CAAd,GAAkBA,CAAlB;AACA,WAAK0J,QAAL,CAAcxJ,CAAd,GAAkBA,CAAlB;AACA,UAAK,KAAKwJ,QAAL,CAAc1J,CAAd,GAAkB,KAAKoD,KAAvB,GAA+B,KAAKkG,SAArC,GAAkD,KAAKE,KAA3D,EAAkE;AAChE,aAAKpG,KAAL,GAAa,KAAKsG,QAAL,CAAc1J,CAAd,IAAmB,KAAKwJ,KAAL,GAAa,KAAKF,SAArC,CAAb;AACD,OAFD,MAEO,IAAI,KAAKI,QAAL,CAAc1J,CAAd,GAAkB,KAAKsJ,SAAvB,GAAmC,KAAKlG,KAA5C,EAAmD;AACxD,aAAKA,KAAL,GAAa,KAAKsG,QAAL,CAAc1J,CAAd,GAAkB,KAAKsJ,SAApC;AACD;;AAED,UAAK,KAAKI,QAAL,CAAcxJ,CAAd,GAAkB,KAAKmD,KAAvB,GAA+B,KAAKkG,SAArC,GAAkD,KAAKE,KAA3D,EAAkE;AAChE,aAAKpG,KAAL,GAAa,KAAKqG,QAAL,CAAcxJ,CAAd,IAAmB,KAAKuJ,KAAL,GAAa,KAAKF,SAArC,CAAb;AACD,OAFD,MAEO,IAAI,KAAKG,QAAL,CAAcxJ,CAAd,GAAkB,KAAKqJ,SAAvB,GAAmC,KAAKlG,KAA5C,EAAmD;AACxD,aAAKA,KAAL,GAAa,KAAKqG,QAAL,CAAcxJ,CAAd,GAAkB,KAAKqJ,SAApC;AACD;;AAED,UAAI,KAAKnG,KAAL,GAAa,CAAjB,EAAoB;AAClB,aAAKA,KAAL,GAAa,CAAb;AACD;AACD,UAAI,KAAKC,KAAL,GAAa,CAAjB,EAAoB;AAClB,aAAKA,KAAL,GAAa,CAAb;AACD;AACD,UAAI,KAAKD,KAAL,GAAa,KAAKoG,KAAlB,GAA0B,KAAKJ,UAAnC,EAA+C;AAC7C,aAAKhG,KAAL,GAAa,KAAKgG,UAAL,GAAkB,KAAKI,KAApC;AACD;AACD,UAAI,KAAKnG,KAAL,GAAa,KAAKoG,KAAlB,GAA0B,KAAKJ,WAAnC,EAAgD;AAC9C,aAAKhG,KAAL,GAAa,KAAKgG,WAAL,GAAmB,KAAKI,KAArC;AACD;AACD;AACD;;;;;;kBAGYR,Q;;;;;;;;;;;;;;;;;IC1DTW,K;AACJ,iBAAY9J,KAAZ,EAAmBC,MAAnB,EAA2B;AAAA;;AACzB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;;;+BAEU;AACT,UAAI8J,MAAMlE,SAASmE,aAAT,CAAuB,QAAvB,EAAiCjB,UAAjC,CAA4C,IAA5C,CAAV;AACAgB,UAAIjG,MAAJ,CAAW9D,KAAX,GAAmB,KAAKA,KAAxB;AACA+J,UAAIjG,MAAJ,CAAW7D,MAAX,GAAoB,KAAKA,MAAzB;;AAEA,UAAMgK,OAAO,CAAC,EAAE,KAAKjK,KAAL,GAAW,EAAb,CAAD,GAAoB,CAAjC;AACA,UAAMkK,UAAU,CAAC,EAAE,KAAKjK,MAAL,GAAY,EAAd,CAAD,GAAqB,CAArC;;AAEA8J,UAAItH,SAAJ,GAAgB,SAAhB;AACAsH,UAAII,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAKnK,KAAxB,EAA+B,KAAKC,MAApC;AACA8J,UAAIxH,IAAJ;;AAEA,WAAK,IAAIrC,IAAI,CAAb,EAAgBA,IAAI+J,IAApB,EAA0B/J,GAA1B,EAA+B;AAC7B6J,YAAIvH,SAAJ;AACA,aAAK,IAAIpC,IAAI,CAAb,EAAgBA,IAAI8J,OAApB,EAA6B9J,GAA7B,EAAkC;AAChC2J,cAAIK,IAAJ,CAASlK,IAAE,EAAX,EAAeE,IAAE,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AACD;AACD2J,YAAItH,SAAJ,GAAgB,SAAhB;AACAsH,YAAIhH,IAAJ;AACAgH,YAAI/G,SAAJ;AACD;;AAED+G,UAAI9G,OAAJ;;AAEA,WAAKoH,KAAL,GAAa,IAAIC,KAAJ,EAAb;AACA,WAAKD,KAAL,CAAWE,GAAX,GAAiBR,IAAIjG,MAAJ,CAAW0G,SAAX,CAAqB,WAArB,CAAjB;AACAT,YAAM,IAAN;AACD;;;yBAEI5H,O,EAASmB,K,EAAOC,K,EAAO;AAC1BpB,cAAQsI,SAAR,CACE,KAAKJ,KADP,EAEE,CAFF,EAGE,CAHF,EAIE,KAAKA,KAAL,CAAWrK,KAJb,EAKE,KAAKqK,KAAL,CAAWpK,MALb,EAME,CAACqD,KANH,EAOE,CAACC,KAPH,EAQE,KAAK8G,KAAL,CAAWrK,KARb,EASE,KAAKqK,KAAL,CAAWpK,MATb;AAWD;;;;;;kBAIY6J,K","file":"./lib/client/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 561bd880e3b0aa9f5d56","export function dist(pos1, pos2) {\n  return Math.sqrt(\n    Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n  );\n}\n\nexport function randomPos(width, height) {\n  const x = Math.random() * width;\n  const y = Math.random() * height;\n  return [x, y];\n}\n\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function randomColor() {\n  const colors = ['#9850FF', '#FE5F5C', '#FF5EAE', '#69FE60', '#5EFFE5', '#FEFB5B', '#695DFE', '#EDA14B'];\n  return colors[Math.floor(Math.random() * colors.length)]\n}\n\nexport function slopeToDegrees(x, y) {\n  return Math.atan2(y, x)\n};\n\nexport function vectorToRadians(x, y) {\n  return Math.atan2(y, x);\n}\n\nexport function radiansToVector(radians) {\n  const y = Math.sin(radians);\n  const x = Math.cos(radians);\n  return [x, y];\n};\n\nexport function radiansToDegrees(radians) {\n  return radians / (Math.PI / 180);\n}\n\nexport function degreesToRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nexport function calculateNewVector(startRadians, targetRadians) {\n  if (startRadians < 0 && targetRadians < 0) {\n    if (startRadians < targetRadians) {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 16));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 16));\n    }\n  } else if (startRadians > 0 && targetRadians > 0) {\n    if (startRadians < targetRadians) {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 16));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 16));\n    }\n  } else if (startRadians < 0 && targetRadians > 0) {\n    if (targetRadians - degreesToRadians(180) > startRadians) {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 16));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 16));\n    }\n  } else {\n    if (targetRadians + degreesToRadians(180) > startRadians) {\n      var [newX, newY] = radiansToVector(startRadians - (Math.PI / 16));\n    } else {\n      var [newX, newY] = radiansToVector(startRadians + (Math.PI / 16));\n    }\n  }\n  return [newX, newY];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/util.js","import * as Util from './util';\n\nclass Player {\n  constructor(id, x, y, size, game, color) {\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n\n    this.color = color || Util.randomColor();\n    this.game = game\n\n    this.velX = 0.7;\n    this.velY = 0.7;\n\n    this.speedMultiplier = 6;\n\n    this.width = 50;\n    this.height = 50;\n\n    this.boosting = false;\n    this.count = 0;\n\n    this.radius = 15;\n    this.zombies = [];\n    for (let i = 0; i < this.size; i++) {\n      this.zombies.push([this.x, this.y, [this.velX, this.velY]])\n    }\n  }\n\n  drawSegment(context, xPos, yPos, stroke) {\n    context.save();\n    context.beginPath();\n    context.fillStyle = this.color;\n    context.strokeStyle = \"#ccc\";\n    context.lineWidth = 1;\n    if (this.boosting) {\n      context.shadowColor = this.color;\n      context.shadowBlur = 20;\n    }\n    context.arc(xPos + this.radius, yPos + this.radius , this.radius, 0, Math.PI * 2, false);\n    context.fill();\n    context.stroke();\n    context.closePath();\n    context.restore();\n\n  }\n\n  grow() {\n    const lastZombie = this.zombies[this.size-1]\n    this.zombies.push(lastZombie);\n    this.size += 1;\n    this.radius += 0.02;\n  }\n\n  shrink() {\n    if (this.count === 10) {\n      const nectarCoords = this.zombies.pop();\n      // this.purgeNectar(nectarCoords[0], nectarCoords[1], 5, this.color);\n      this.game.addNectar(nectarCoords[0], nectarCoords[1], 5, this.color);\n      this.size -= 1;\n      this.radius -= 0.02;\n      this.count = 0;\n    } else {\n      this.count += 1;\n    }\n    // console.log(this.zombies.length);\n  }\n\n  draw(context, xView, yView) {\n    for (let i = this.zombies.length-1; i >= 0; i--) {\n      if (i % 2 === 0) {\n        const zombie = this.zombies[i];\n        const zxPos = zombie[0] - this.radius - xView;\n        const zyPos = zombie[1] - this.radius - yView;\n        this.drawSegment(context, zxPos, zyPos, true)\n      }\n    }\n    const xPos = (this.x - this.radius) - xView;\n    const yPos = (this.y - this.radius) - yView;\n    this.drawSegment(context, xPos, yPos, true);\n  }\n\n  // update(velocityScale, worldWidth, worldHeight) {\n  //   if (this.size > this.zombies.length) {\n  //     for (let i = 0; i < this.size-this.zombies.length; i++) {\n  //       this.zombies.push([])\n  //     }\n  //   }\n  //   let nextX = this.x;\n  //   let nextY = this.y;\n  //   let nextVel = [this.velX, this.velY];\n  //   for (let i = 0; i < this.zombies.length; i++) {\n  //     let zX = nextX;\n  //     let zY = nextY;\n  //     let zV = nextVel;\n  //     nextX = this.zombies[i][0];\n  //     nextY = this.zombies[i][1];\n  //     nextVel = this.zombies[i][2];\n  //     this.zombies[i] = [zX, zY, zV];\n  //   }\n  //\n  //   this.x += (this.velX * velocityScale) * this.speedMultiplier;\n  //   this.y += (this.velY * velocityScale) * this.speedMultiplier;\n  //\n  //   if (this.x - this.radius < 0) {\n  //     // this.die();\n  //     this.x = this.radius\n  //     // this.game.playerDie(this);\n  //   }\n  //   if (this.y - this.radius < 0) {\n  //     // this.die();\n  //     this.y = this.radius\n  //     // this.game.playerDie(this);\n  //   }\n  //   if (this.x + this.radius > worldWidth) {\n  //     // this.die();\n  //     this.x = this.worldWidth-this.radius\n  //     // this.game.playerDie(this);\n  //   }\n  //   if (this.y + this.radius > worldHeight) {\n  //     // this.die();\n  //     this.y = this.worldHeight-this.radius\n  //     // this.game.playerDie(this);\n  //   }\n  //\n  //   if (this.boosting) {\n  //     this.shrink();\n  //   }\n  // }\n\n  boost() {\n    this.speedMultiplier = 10;\n    this.boosting = true;\n  }\n\n  unboost() {\n    this.speedMultiplier = 6;\n    this.boosting = false;\n  }\n\n  changeXVel(x) {\n    this.velX = x;\n  }\n\n  changeYVel(y) {\n    this.velY = y;\n  }\n\n  changeBoost(speed) {\n    this.speedMultiplier = speed;\n  }\n\n}\n\nexport default Player;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/player.js","import World from './world';\nimport Player from './player';\nimport Viewport from './viewport';\nimport Nectar from './nectar';\nimport * as Util from './util';\n\n\nclass Game {\n  constructor(context, canvas, socket) {\n    this.canvas = canvas;\n    this.context = context;\n    this.socket = socket;\n    this.world = new World(3000, 3000);\n    this.viewport = new Viewport(0, 0, this.canvas.width, this.canvas.height, this.world.width, this.world.height);\n    this.nectar = [];\n    this.players = {};\n    // this.playersArr = Object.values(this.players);\n    this.nectarCount = 300;\n    this.currentPlayerId = null;\n    // this.setup();\n    this.inputs = 0;\n\n  }\n\n  setup() {\n    this.handleInput();\n    this.world.generate();\n    this.viewport.follow(this.players[this.currentPlayerId], this.canvas.width / 2, this.canvas.height / 2);\n    // this.start()\n  }\n\n  populate() {\n    for (let i = 0; i < this.nectarCount; i++) {\n      this.addNectar();\n    }\n  }\n\n  setCurrentPlayerId(id) {\n    this.currentPlayerId = id;\n  }\n\n  add(object) {\n    if (object instanceof Player) {\n      this.players[object.id] = object\n      // this.players.push(object);\n    } else if (object instanceof Nectar) {\n      this.nectar.push(object);\n    } else {\n      throw \"unknown type of object\";\n    }\n  }\n\n  addPlayer(id) {\n    const player = new Player(id, 50, 50, 75, this);\n    this.add(player);\n    this.setCurrentPlayerId(id);\n  }\n\n  gameObjects() {\n    return [this.world].concat(this.nectar).concat(Object.values(this.players))\n  }\n\n  addNectar(x, y, r, c) {\n    const xPos = x || Util.getRandomInt(1, this.world.width);\n    const yPos = y || Util.getRandomInt(1, this.world.width);\n    const radius = r || Util.getRandomInt(3, 8);\n    const color = c || Util.randomColor();\n    const nectar = new Nectar(xPos, yPos, radius, c);\n    this.add(nectar);\n  }\n\n  // playerDie(player) {\n  //   const coords = player.zombies;\n  //   for (let i = 0; i < coords.length; i++) {\n  //     if (i % 4 === 0) {\n  //       const x = Util.getRandomInt(coords[i][0] - 12, coords[i][0] + 12);\n  //       const y = Util.getRandomInt(coords[i][1] - 12, coords[i][1] + 12);\n  //       const r = Util.getRandomInt(3, 8);\n  //       const c = this.players[player.id].color\n  //       this.addNectar(x, y, r, c);\n  //     }\n  //   }\n  //   this.removePlayer(player);\n  // }\n\n  removePlayer(player) {\n    delete this.players[player.id];\n  }\n\n  // update(delta) {\n  //   const normal_frame_time = 1000/60;\n  //   const velocityScale = delta / normal_frame_time\n  //   Object.values(this.players).forEach((player) => {\n  //     player.update(velocityScale, this.world.width, this.world.height);\n  //   })\n  //   this.viewport.update(this.players[this.currentPlayerId].x, this.players[this.currentPlayerId].y);\n  //   this.handleCollisions();\n  // }\n\n  draw() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.gameObjects().forEach((object) => {\n      object.draw(this.context, this.viewport.xView, this.viewport.yView);\n    });\n  }\n\n  // handleCollisions() {\n  //   this.nectar.forEach((nectar) => {\n  //     Object.values(this.players).forEach((player) => {\n  //       const centerDist = Util.dist([player.x, player.y], [nectar.x, nectar.y]);\n  //       if (centerDist < (player.radius + nectar.radius)) {\n  //         nectar.relocate(this.world.width, this.world.height);\n  //         for (let i = 0; i < nectar.radius / 3; i++) {\n  //           player.grow();\n  //         }\n  //       }\n  //     });\n  //   });\n  // }\n\n  start() {\n    this.requestId = window.requestAnimationFrame(this.gameLoop.bind(this));\n  }\n\n  // gameLoop(time) {\n  //   if (!this.lastTime) {\n  //     this.lastTime = time;\n  //   }\n  //   const delta = -(this.lastTime - time);\n  //   // this.socket.emit('player position', [this.players[window.playerId].x, this.players[window.playerId].y])\n  //   this.update(delta);\n  //   this.draw();\n  //   this.lastTime = time;\n  //   this.requestId = window.requestAnimationFrame(this.gameLoop.bind(this))\n  // }\n\n  // calculateNewVector(startRadians, targetRadians) {\n  //   if (startRadians < 0 && targetRadians < 0) {\n  //     if (startRadians < targetRadians) {\n  //       var [newX, newY] = Util.radiansToVector(startRadians + (Math.PI / 32));\n  //     } else {\n  //       var [newX, newY] = Util.radiansToVector(startRadians - (Math.PI / 32));\n  //     }\n  //   } else if (startRadians > 0 && targetRadians > 0) {\n  //     if (startRadians < targetRadians) {\n  //       var [newX, newY] = Util.radiansToVector(startRadians + (Math.PI / 32));\n  //     } else {\n  //       var [newX, newY] = Util.radiansToVector(startRadians - (Math.PI / 32));\n  //     }\n  //   } else if (startRadians < 0 && targetRadians > 0) {\n  //     if (targetRadians - Util.degreesToRadians(180) > startRadians) {\n  //       var [newX, newY] = Util.radiansToVector(startRadians - (Math.PI / 32));\n  //     } else {\n  //       var [newX, newY] = Util.radiansToVector(startRadians + (Math.PI / 32));\n  //     }\n  //   } else {\n  //     if (targetRadians + Util.degreesToRadians(180) > startRadians) {\n  //       var [newX, newY] = Util.radiansToVector(startRadians - (Math.PI / 32));\n  //     } else {\n  //       var [newX, newY] = Util.radiansToVector(startRadians + (Math.PI / 32));\n  //     }\n  //   }\n  //   return [newX, newY];\n  // }\n\n  handleInput() {\n    let down = false;\n    document.addEventListener(\"keydown\", (e) => {\n\n      if (e.key === \" \") {\n        e.preventDefault();\n        if (down) {\n          return\n        }\n        this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"on\"} );\n        down = true;\n      }\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n      e.preventDefault()\n      if (e.key === \" \") {\n        if (down) {\n          down = false;\n        }\n        this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"off\"});\n      }\n    });\n\n    document.addEventListener('mousedown', (e) => {\n      e.preventDefault();\n      this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"on\"});\n\n    });\n\n    document.addEventListener('mouseup', (e) => {\n      e.preventDefault();\n      this.socket.emit(\"boost\", { id: this.currentPlayerId, status: \"off\"});\n    });\n\n    document.addEventListener('mousemove', (e) => {\n      e.preventDefault();\n      if (this.players[this.currentPlayerId]) {\n        // top-left coordinates of the canvas on the document\n        const canvasCoords = this.canvas.getBoundingClientRect();\n\n        // the 'origin' -> coordinates of the player relative to the top-left corner of the canvas\n        const oX = canvasCoords.left + (this.players[this.currentPlayerId].x - this.viewport.xView);\n        const oY = canvasCoords.top + (this.players[this.currentPlayerId].y - this.viewport.yView);\n\n        // coordinates of mouse position on document\n        const mX = e.clientX;\n        const mY = e.clientY;\n\n        // difference between mouse coords and origin coords\n        const dX = (mX - oX);\n        const dY = (mY - oY);\n\n        const startRadians =  Util.vectorToRadians(this.players[this.currentPlayerId].velX, this.players[this.currentPlayerId].velY);\n        const targetRadians = Util.vectorToRadians(dX, dY);\n        const [newX, newY] = Util.calculateNewVector(startRadians, targetRadians);\n\n        this.socket.emit(\"player move\", {\n          id: this.currentPlayerId,\n          pos: [newX, newY],\n          num: this.inputs += 1,\n          timestamp: Date.now()\n        });\n\n      }\n      // this.players[this.currentPlayerId].changeXVel(newX);\n      // this.players[this.currentPlayerId].changeYVel(newY);\n    });\n  }\n}\n\n\nexport default Game;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/game.js","import Game from './game';\nimport * as Util from './util';\nimport Player from './player';\n\n\nclass GameView {\n  constructor(context, canvas, socket) {\n    this.canvas = canvas;\n    this.context = context;\n    this.socket = socket;\n    this.game = new Game(this.context, this.canvas, this.socket);\n    this.currentPlayerId = null;\n    this.count = 0;\n    this.moveNum = 0;\n    this.listen();\n  }\n\n  listen() {\n    this.socket.on(\"onConnected\", this.start.bind(this));\n    this.socket.on(\"new player\", this.registerNewPlayer.bind(this));\n    this.socket.on(\"draw\", this.draw.bind(this));\n    this.socket.on(\"update\", this.update.bind(this));\n    this.socket.on(\"player disconnected\", this.onPlayerDisconnected.bind(this));\n    this.socket.on(\"players\", this.onReceivePlayers.bind(this));\n    // this.socket.on(\"remove player\", this.removePlayer.bind(this))\n  }\n\n  start(data) {\n    console.log( 'Connected successfully to the socket.io server. My server side ID is ' + data.id );\n\n    this.currentPlayerId = data.id;\n    this.game.addPlayer(data.id);\n    this.game.setup();\n    // this.game.handleInput();\n  }\n\n  update(data) {\n    // console.log(\"data.players\", Object.keys(data.players))\n    // console.log(\"this.game.players\",Object.keys(this.game.players))\n    // Object.values(data.players).forEach((d) => {\n    //   const player = this.game.players[d.id];\n    //   if (player) {\n    //     this.moveNum = d.moveNum;\n    //     player.update(0, this.game.worldWidth, this.game.worldHeight)\n    //   } else {\n    //     const existingPlayer = new Player(d.id, d.pos[0], d.pos[1], d.zombies.length, this.game, d.color);\n    //     existingPlayer.radius = d.radius;\n    //     this.game.players[d.id] = existingPlayer;\n    //   }\n    // }, this);\n    // Object.keys(this.game.players).forEach((id) => {\n    //   if (!Object.keys(data.players).includes(id)) {\n    //     delete this.game.players[id];\n    //   }\n    // })\n    // this.game.nectar = data.nectar;\n  }\n\n  onReceivePlayers(data) {\n    console.log(data);\n  }\n\n  registerNewPlayer(data) {\n    const newPlayer = new Player(data.id, data.x, data.y, 75, this.game, data.color);\n    this.game.players[data.id] = newPlayer;\n  }\n\n  onPlayerDisconnected(data) {\n    console.log(data);\n    delete this.game.players[data]\n  }\n\n  // removePlayer(data) {\n  //   this.game.removePlayer(data.userId);\n  //   delete this.game.players[data];\n  //   console.log(Object.values(this.game.players).length)\n  // }\n\n  updatePlayer(id, pos, speed, vel, radius, size, color, zombies, boosting) {\n    const player = this.game.players[id];\n    if (player) {\n      // debugger\n      player.x = pos[0];\n      player.y = pos[1];\n      // player.speedMultiplier = speed;\n      player.boosting = boosting;\n      player.radius = radius;\n      player.size = size;\n      player.zombies = zombies;\n      player.changeXVel(vel[0])\n      player.changeYVel(vel[1])\n      // player.update(0, this.game.worldWidth, this.game.worldHeight)\n    } else {\n      const existingPlayer = new Player(id, pos[0], pos[1], zombies.length, this.game, color);\n      existingPlayer.radius = radius;\n      this.game.players[id] = existingPlayer;\n    }\n  }\n\n  draw(data) {\n    Object.values(data.players).forEach((player) => {\n      this.updatePlayer(player.id, player.pos, player.speed, player.vel, player.radius, player.size, player.color, player.zombies, player.boosting);\n    }, this);\n    Object.keys(this.game.players).forEach((id) => {\n      if (!Object.keys(data.players).includes(id)) {\n        delete this.game.players[id];\n      }\n    });\n    this.game.nectar = []\n    Object.values(data.nectar).forEach((nectar) => {\n      if (nectar) {\n        // console.log(nectar.shadow)\n        this.game.addNectar(nectar.x, nectar.y, nectar.radius, nectar.color, nectar.shadow);\n      }\n    });\n    if (this.game.players[this.currentPlayerId]) {\n      this.game.viewport.update(this.game.players[this.currentPlayerId].x, this.game.players[this.currentPlayerId].y);\n    }\n    this.game.draw();\n  }\n\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('game-canvas');\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  const context = canvas.getContext(\"2d\");\n  const socket = io();\n  const game_view = new GameView(context, canvas, socket);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/game_view.js","import * as Util from './util';\n\nclass Nectar {\n  constructor(x, y, radius, color, shadow) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = color || Util.randomColor();\n    this.shadow = shadow || 30;\n  }\n\n  rotate() {\n\n  }\n\n  relocate(width, height) {\n    this.x = Util.getRandomInt(1, width);\n    this.y = Util.getRandomInt(1, height);\n  }\n\n  draw(context, xView, yView) {\n    context.save();\n    context.beginPath();\n    context.shadowColor = this.color;\n    context.shadowBlur = this.shadow;\n    // context.fillStyle = \"#9850FF\";\n    context.fillStyle = this.color;\n    // context.lineWidth = 1;\n    context.arc(this.x+this.radius - xView, this.y+this.radius - yView, this.radius, 0, Math.PI * 2, false);\n    context.fill();\n    context.closePath();\n    context.restore();\n  }\n}\n\nexport default Nectar;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/nectar.js","\nclass Viewport {\n  constructor(xView, yView, canvasWidth, canvasHeight, worldWidth, worldHeight) {\n    this.xView = xView || 0;\n    this.yView = yView || 0;\n\n    // distance from followed object to border before camera starts to move\n    this.xDeadZone = 0;\n    this.yDeadZone = 0;\n\n    // viewport dimensions\n    this.wView = canvasWidth;\n    this.hView = canvasHeight;\n\n    this.followed = null;\n\n    this.worldWidth = worldWidth;\n    this.worldHeight = worldHeight;\n  }\n\n  follow(gameObject, xDeadZone, yDeadZone) {\n    this.followed = gameObject;\n    this.xDeadZone = xDeadZone;\n    this.yDeadZone = yDeadZone;\n  }\n\n  update(x, y) {\n    // console.log(this.followed.x)\n    this.followed.x = x;\n    this.followed.y = y;\n    if ((this.followed.x - this.xView + this.xDeadZone) > this.wView) {\n      this.xView = this.followed.x - (this.wView - this.xDeadZone);\n    } else if (this.followed.x - this.xDeadZone < this.xView) {\n      this.xView = this.followed.x - this.xDeadZone;\n    }\n\n    if ((this.followed.y - this.yView + this.yDeadZone) > this.hView) {\n      this.yView = this.followed.y - (this.hView - this.yDeadZone);\n    } else if (this.followed.y - this.yDeadZone < this.yView) {\n      this.yView = this.followed.y - this.yDeadZone;\n    }\n\n    if (this.xView < 0) {\n      this.xView = 0\n    }\n    if (this.yView < 0) {\n      this.yView = 0\n    }\n    if (this.xView + this.wView > this.worldWidth) {\n      this.xView = this.worldWidth - this.wView;\n    }\n    if (this.yView + this.hView > this.worldHeight) {\n      this.yView = this.worldHeight - this.hView;\n    }\n    // }\n  }\n}\n\nexport default Viewport;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/viewport.js","class World {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  generate() {\n    let ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    ctx.canvas.width = this.width;\n    ctx.canvas.height = this.height;\n\n    const rows = ~~(this.width/88) + 1;\n    const columns = ~~(this.height/88) + 1;\n\n    ctx.fillStyle = \"#070B0F\";\n    ctx.fillRect(0, 0, this.width, this.height);\n    ctx.save();\n\n    for (let x = 0; x < rows; x++) {\n      ctx.beginPath();\n      for (let y = 0; y < columns; y++) {\n        ctx.rect(x*88, y*88, 84, 84);\n      }\n      ctx.fillStyle = \"#23292E\";\n      ctx.fill();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n\n    this.image = new Image();\n    this.image.src = ctx.canvas.toDataURL(\"image/png\");\n    ctx = null;\n  }\n\n  draw(context, xView, yView) {\n    context.drawImage(\n      this.image,\n      0,\n      0,\n      this.image.width,\n      this.image.height,\n      -xView,\n      -yView,\n      this.image.width,\n      this.image.height\n    );\n  }\n}\n\n\nexport default World;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/client/world.js"],"sourceRoot":""}